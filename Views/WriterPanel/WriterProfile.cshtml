@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "WriterProfile";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}
<style>
    .center-div {
        display: flex;
        justify-content: center;
    }

        .center-div .customtext {
            font-size: 40px;
            background: linear-gradient(to left, #572ADE 0%, #12A77F 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 20px;
        }

    .customtext2 {
        font-size: 16px;
        background: linear-gradient(to left, #572ADE 0%, #12A77F 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 10px;
    }
</style>

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-0">
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-left">
                    <li style="margin-top:5px"><i class="fas fa-user-alt"></i></li>
                    <li style="margin-left:10px"><h1 class="m-0"> My Profile</h1></li>
                </ol>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item active">WebDictionary v1</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>


<div class="row">
    <section class="col-lg-12">
        <!-- Custom tabs (Charts with tabs)-->
        <div class="card" style="background-color: #181A1F; color: #9FA0A2;">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-user-edit mr-1"></i>
                    Edit Profile
                </h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse" style="margin-right:15px">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div><!-- /.card-header -->
            <div class="card-body">
                <section class="content">
                    <div class="row">
                        <section class="col-lg-6">
                            <div class="center-div">
                                <div class="customtext">Profile Card</div>
                            </div>
                            @Html.Action("userCard", "WriterPanel")
                        </section>
                        <section class="col-lg-6">
                            <div class="card" style="background-color: #181A1F; color: #9FA0A2;">
                                <div class="card-body">
                                    @using (Html.BeginForm("WriterProfile", "WriterPanel", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                    {
                                        <div class="form-group">
                                            @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control", @placeholder = "Name" })
                                            @Html.ValidationMessageFor(x => x.WriterName, "", new { @style = "color:red" })
                                            <br />
                                            @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control", @placeholder = "Surname" })
                                            @Html.ValidationMessageFor(x => x.WriterSurname, "", new { @style = "color:red" })
                                            <br />
                                            @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control", @placeholder = "Title" })
                                            @Html.ValidationMessageFor(x => x.WriterTitle, "", new { @style = "color:red" })
                                            <br />
                                            @Html.TextAreaFor(x => x.WriterAbout, new { @class = "form-control", @placeholder = "About" })
                                            @Html.ValidationMessageFor(x => x.WriterAbout, "", new { @style = "color:red" })
                                            <br />
                                            <div class="customtext2">
                                                **If you change your own mail, you will be directed to the login panel to log in again.
                                            </div>
                                            @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control", @placeholder = "Mail" })
                                            @Html.ValidationMessageFor(x => x.WriterMail, "", new { @style = "color:red" })
                                            <br />
                                            <div class="customtext2">
                                                *If you don't want to change your password, leave this blank.
                                            </div>
                                            <div class="form-group">
                                                <input type="text" class="form-control" name="NewWriterPassword" placeholder="New Password" />
                                                @if (TempData["validate"] != null)
                                                {
                                                    <label style="color: red"> @TempData["validate"]</label>
                                                }
                                            </div>
                                            <br />
                                            <div class="input-group">
                                                <div class="custom-file">
                                                    <input type="file" class="custom-file-input" id="exampleInputFile" accept="image/*" name="imageFile">
                                                    <label class="custom-file-label" for="exampleInputFile">Choose file</label>
                                                </div>
                                            </div>
                                            <br />
                                            @Html.HiddenFor(x => x.WriterID)
                                            @Html.HiddenFor(x => x.WriterPassword)
                                            <div style="text-align: right;">
                                                <button class="btn btn-outline-light custom-button" style="margin-top:10px;">Save Changes</button>
                                            </div>

                                        </div>
                                    }
                                </div>
                                <!-- /.card-body -->
                            </div>
                        </section>
                    </div>
                </section>

            </div>
        </div>
    </section>
</div>

@section scripts{
    <script>
        const buttons = document.querySelectorAll(".usercard-buttons button");
        const sections = document.querySelectorAll(".usercard-section");
        const card = document.querySelector(".usercard");

        const handleButtonClick = (e) => {
            const targetSection = e.target.getAttribute("data-section");
            const section = document.querySelector(targetSection);
            targetSection !== "#about"
                ? card.classList.add("is-active")
                : card.classList.remove("is-active");
            card.setAttribute("data-state", targetSection);
            sections.forEach((s) => s.classList.remove("is-active"));
            buttons.forEach((b) => b.classList.remove("is-active"));
            e.target.classList.add("is-active");
            section.classList.add("is-active");
        };

        buttons.forEach((btn) => {
            btn.addEventListener("click", handleButtonClick);
        });

    </script>

    <script src="~/AdminLTE-3.0.4/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            bsCustomFileInput.init();
        });
    </script>

    @if (ViewBag.updateresult == "true")
    {
        <script>
            $(document).ready(function () {
                Swal.fire({
                    title: 'Updated!',
                    text: 'Profile was updated successfully.',
                    icon: 'success'
                });
            });
        </script>
    }

    @*@if (ViewBag.updateresultlogin == "true")
    {
        <script>
            $(document).ready(function () {
                var url = '@Url.Action("signOut", "WriterPanel")';
                $.ajax({
                    type: 'GET',
                    url: url,
                    success: function () {
                        Swal.fire({
                            title: 'Updated!',
                            text: 'Profile was updated successfully. Now you will be directed to the login panel to log in again.',
                            icon: 'success'
                        }).then((result) => {
                            location.href("Login/WriterLogin");
                        });
                    },
                    error: function () {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred, the profile could not be updated.',
                            icon: 'error'
                        });
                    }
                });
            });
        </script>
    }*@
}